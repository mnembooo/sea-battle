import random
import os
import time


def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')


def print_board(board):
    print("  A B C D E F G")
    print("  ---------------")
    row_number = 1
    for row in board:
        print("%d|%s|" % (row_number, "|".join(row)))
        row_number += 1


def empty_board():
    return [[" " for _ in range(7)] for _ in range(7)]



def is_valid_placement(board, row, col, size, orientation):
    for i in range(-1, size + 1):
        for dx in [-1, 0, 1]:
            for dy in [-1, 0, 1]:
                r, c = (row + dx, col + i) if orientation == 'horizontal' else (row + i, col + dy)
                if 0 <= r < len(board) and 0 <= c < len(board[0]) and board[r][c] != " ":
                    return False
    return True

def place_ships(board):
    ships = [(3, 1), (2, 2), (1, 4)]  

    for size, count in ships:
        for _ in range(count):
            placed = False
            while not placed:
                orientation = random.choice(['horizontal', 'vertical'])
                if orientation == 'horizontal':
                    row, col = random.randint(0, len(board) - 1), random.randint(0, len(board[0]) - size)
                    if is_valid_placement(board, row, col, size, orientation):
                        for i in range(size):
                            board[row][col + i] = 'S'
                        placed = True
                else:
                    row, col = random.randint(0, len(board) - size), random.randint(0, len(board[0]) - 1)
                    if is_valid_placement(board, row, col, size, orientation):
                        for i in range(size):
                            board[row + i][col] = 'S'
                        placed = True


def get_shot(target_board):
    while True:
        try:
            shot = input("Enter your shot (e.g., A1): ").upper()
            if len(shot) == 2 and shot[0] in 'ABCDEFG' and shot[1] in '1234567':
                col = ord(shot[0]) - ord('A')
                row = int(shot[1]) - 1
                if target_board[row][col] == " ":
                    return row, col
                else:
                    print("You've already shot here. Try a different spot.")
            else:
                print("Invalid input. Please enter a letter A-G followed by a number 1-7.")
        except ValueError:
            print("Invalid input. Please enter a letter A-G followed by a number 1-7.")

def update_board(board, target_board, row, col):
    if target_board[row][col] == " ":
        if board[row][col] == 'S':
            board[row][col] = 'X'
            target_board[row][col] = 'X'
            print("It's a hit!")
        else:
            target_board[row][col] = 'O'
            print("You missed!")
    else:
        print("You've already shot here. Your turn is skipped.")


def all_sunk(board):
    return all(cell != 'S' for row in board for cell in row)


def main():
    player_name = input("Enter your name: ")
    board = empty_board()
    place_ships(board)
    target_board = empty_board()
    shots = 0

    while not all_sunk(board):
        clear_screen()
        print_board(target_board)
        row, col = get_shot()
        update_board(board, target_board, row, col)
        shots += 1
        time.sleep(2)

    print(f"Congratulations {player_name}! You completed the game in {shots} shots.")
    play_again = input("Would you like to play again? (yes/no): ")
    if play_again.lower() == 'yes':
        main()

if __name__ == "__main__":
    main()
